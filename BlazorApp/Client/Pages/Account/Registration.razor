@page "/register"
@using BlazorApp.Client.Services;
@using BlazorApp.Shared.Models.RequestModels.User
@using BlazorApp.Shared.Models.ResponseModel.Session
@using System.Text.Json
@using BlazorApp.Shared.Models.ResponseModel.User
@inject HttpClient Http
@inject NavigationManager nv
@inject IJSRuntime JS
@layout EmptyLayout
@inject IAccountService AccountService
<link href='https://fonts.googleapis.com/css?family=Average Sans' rel='stylesheet'>
<div class="container px-4">
    <button @onclick="Back" class="btn btn-outline-dark oi oi-arrow-left"></button>
    <br />
    @if (isRegistrationSuccess)
    {
        <div class="alert alert-dismissible alert-success">
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            <strong>Регістрація успішна </strong><a href="">@_user.Email</a>
        </div>
    }
    @if (errStr != "")
    {
        <div class="alert alert-dismissible alert-danger">
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            <strong>Помилка </strong><a href=""> @errStr</a>
        </div>
    }

    <div class="row">
        <div class="col-lg-6">
            <div class="text-center">
                <h2>ITEXPERT</h2>
                <div class="logo-slash"></div>
                <strong>ITEXPERT Digital Platform</strong>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card">
                <div>
                    <h1><b>Вітаємо в ІТEXPERT</b></h1>
                    <div class="container-fluid d-flex justify-content-center align-items-center h-100" style="margin-top: 20px">
                        <div class="card p-3 text-center py-4">
                            <EditForm EditContext="@editContext">
                                <DataAnnotationsValidator />

                                <div class="input-group px-3 mt-3">
                                    <InputText type="text" class="form-control" placeholder="Ім`я" aria-label="firstname" @bind-Value="_registerModel.FirstName"></InputText>
                                    <span></span>
                                    <InputText type="text" class="form-control" placeholder="Прізвище" aria-label="lastname" @bind-Value="_registerModel.LastName"></InputText>
                                </div>
                                <div class="mt-3 px-3">
                                    <InputText class="form-control" placeholder="Ваша пошта" @bind-Value="_registerModel.Email"></InputText>
                                    <ValidationMessage For="@(() => _registerModel.Email)"></ValidationMessage>
                                </div>
                                <div class="mt-3 px-3">
                                    <InputText class="form-control" placeholder="Пароль" type="password" @bind-Value="_registerModel.Password"></InputText>
                                    <ValidationMessage For="@(() => _registerModel.Password)"></ValidationMessage>

                                </div>
                                <div class="mt-3 px-3">
                                    <InputText class="form-control" placeholder="Підтвердити пароль" type="password" @bind-Value="_registerModel.ConfirmPassword"></InputText>
                                    <ValidationMessage For="@(() => _registerModel.ConfirmPassword)"></ValidationMessage>

                                </div>
                                <div class="mt-3 d-grid px-3">
                                    <button class="btn-signup text-uppercase" @onclick="Register">
                                        <span>Регестрація</span>
                                    </button>
                                </div>
                            </EditForm>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        width: 400px;
        border: none;
        padding: 4px, 4px, 4px, 4px;
    }

    .form-control {
        height: 45px;
        border-radius: 10px;
    }

        .form-control:focus {
            box-shadow: none;
        }


    .btn-signup {
        height: 50px;
        border: 0;
        font-weight: 700;
        font-family: Average Sans;
    }

    .logo-slash {
        font-weight: 900;
        color: #008ace;
        vertical-align: text-bottom;
        font-size: 41px;
        letter-spacing: 0;
    }
</style>

@code {
    [CascadingParameter]
    public EmptyLayout Layout { get; set; }

    private RegistrationResponse _user = new RegistrationResponse();
    private RegistrationRequest _registerModel = new RegistrationRequest();
    private EditContext? editContext;

    bool isRegistrationSuccess = false;
    string errStr = "";

    protected override async Task OnInitializedAsync()
    {
        editContext = new EditContext(_registerModel);
    }

    public async Task Register()
    {
        var model = _registerModel;
        try
        {
            if (editContext != null && editContext.Validate())
            {
                
                _user = await AccountService.Register(model);
                isRegistrationSuccess = true;
            }
        }
        catch (Exception ex)
        {
            Layout.Procces(ex);
            errStr = "Ця пошта вже була зарегестрована, перевірте введені данні";
            StateHasChanged();
        }

    }

    public void Back()
    {
        nv.NavigateTo("/");
    }
}
